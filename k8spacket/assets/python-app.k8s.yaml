apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: example
  name: proxy-app
  labels:
    app: proxy-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy-app
  template:
    metadata:
      labels:
        app: proxy-app
    spec:
      containers:
        - name: proxy-app
          image: k8spacket/python-app-tls:1.3
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "300Mi"
              cpu: "100m"
          env:
            - name: SERVICE_URL
              value: https://web-app.example.svc.cluster.local:8443
#            - name: INITIATOR
#              value: "true"
#            - name: RELOAD_SESSION_COUNT
#              value: "100"
#            - name: SLEEP
#              value: "0.05"
---
apiVersion: v1
kind: Service
metadata:
  namespace: example
  name: proxy-app
spec:
  type: ClusterIP
  selector:
    app: proxy-app
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: example
  name: web-app
  labels:
    app: web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      containers:
        - name: web-app
          image: k8spacket/python-app-tls:1.3
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "300Mi"
              cpu: "100m"
          env:
            - name: SERVICE_URL
              value: https://frontend-app.example.svc.cluster.local:8443
---
apiVersion: v1
kind: Service
metadata:
  namespace: example
  name: web-app
spec:
  type: ClusterIP
  selector:
    app: web-app
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: example
  name: frontend-app
  labels:
    app: frontend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-app
  template:
    metadata:
      labels:
        app: frontend-app
    spec:
      containers:
        - name: frontend-app
          image: k8spacket/python-app-tls:1.3
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "300Mi"
              cpu: "100m"
          env:
            - name: SERVICE_URL
              value: https://backend-app.example.svc.cluster.local:8443
---
apiVersion: v1
kind: Service
metadata:
  namespace: example
  name: frontend-app
spec:
  type: ClusterIP
  selector:
    app: frontend-app
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: example
  name: backend-app
  labels:
    app: backend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
        - name: backend-app
          image: k8spacket/python-app-tls:1.3
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "300Mi"
              cpu: "100m"
          env:
            - name: SERVICE_URL
              value: https://db-app.example.svc.cluster.local:8443
---
apiVersion: v1
kind: Service
metadata:
  namespace: example
  name: backend-app
spec:
  type: ClusterIP
  selector:
    app: backend-app
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: example
  name: db-app
  labels:
    app: db-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-app
  template:
    metadata:
      labels:
        app: db-app
    spec:
      containers:
        - name: db-app
          image: k8spacket/python-app-tls:1.3
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "300Mi"
              cpu: "100m"
          env:
            - name: SERVICE_URL
              value: ""
---
apiVersion: v1
kind: Service
metadata:
  namespace: example
  name: db-app
spec:
  type: ClusterIP
  selector:
    app: db-app
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ping-pong
spec:
  template:
    spec:
      containers:
        - name: ping-pong
          image: curlimages/curl
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - while true; do curl https://proxy-app.example.svc.cluster.local:8443 -X POST -k; sleep 10; done
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  name: initial-curls
spec:
  template:
    spec:
      containers:
        - name: initial-curls
          image: curlimages/curl
          command: [ "sh", "-c" ]
          args:
          - |
            sleep 20
            curl https://login.microsoftonline.com
            curl https://management.azure.com
            curl https://raw.githubusercontent.com
            curl https://letsencrypt.org
            curl https://ebpf.io
            curl https://signin.aws.amazon.com
            curl https://k8spacket.github.io
      restartPolicy: OnFailure